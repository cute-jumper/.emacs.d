* My Emacs's Configuration
This is a repository to place my Emacs configuration, and is inteneded to be
used only by myself:-)

* References
My Emacs setup has borrowed a lot from the following sources:
- [[https://github.com/purcell/emacs.d][Purcell's emacs.d]]
- [[https://github.com/bbatsov/prelude][Emacs Prelude]]
- [[https://github.com/syl20bnr/spacemacs][Spacemacs]]
- [[https://github.com/technomancy/emacs-starter-kit/tree/v2][Emacs Starter Kit v2]]
- [[http://emacswiki.org/][Emacs Wiki]]

* Important Key Remapping
At system level:
1. Use [[https://github.com/alols/xcape][xcape]] to map =Space= to both =Space= and =Ctrl=.
2. Swap =Caps Lock= and =Escape=.
3. Swap =Right Alt= and =Menu= so that =Menu= is beside the =Space= key and can
   be easily reached by the right thumb.

In Emacs:
1. Remap =Escape= as =C-c=, pressed by the left pinky.
2. Remap =Menu= as =C-x=, pressed by the right thumb.

With these two most common prefix keys mapping to only one key, it is much
easier for me to press key bindings in Emacs. Try out, and you can feel the
same! Compared to =evil-leader=, it looks like we have =Menu= and =Escape= as
our leader keys without having modal editing!

Remap some common movement key bindings so that all the common movement key
bindings(that *I* use) are starting with =C-=:
1. =C-f= is =forward-word= and =C-b= is =backward-word=
2. =C-h= is =backward-char= and =C-l= is =forward-char=
3. =M-f= is =forward-sexp= and =M-b= is =backward-sexp=
4. =C-i= is =undo=, =C-m= is =kill-word= and =M-d= is =down-list=

Use a global minor mode with the highest priority to make sure the key remapping
always works.

See [[http://cute-jumper.github.io/emacs/2016/02/22/my-simple-setup-to-avoid-rsi-in-emacs][this article]] for more details. Note that in that article, I didn't include
all my personal settings shown in this section. Only two most important parts
are explained.

* Structure
I prefer using directories to structurally organize my settings.
There are three main directories under the =.emacs.d=:
- =startup=: Global settings that should be loaded immediately after startup.
- =modules=: Main part. Configuring all the built-in and ELPA packages.
- =site-lisp=: Configurations for the packages not on ELPA.

Under each of the directory, there is a directory-init file named
=qjp-*-init.el=. =*= stands for the corresponding directory name. Each
directory-init file will be in charge of loading all the settings under its
directory. =init.el= will load these three directory-init files in order:
#+BEGIN_EXAMPLE
init.el
--> startup/qjp-startup-init.el
--> modules/qjp-modules-init.el
--> site-lisp/qjp-site-lisp-init.el
#+END_EXAMPLE

There are many files in different levels of the directory tree, so when I want
to modify the settings, I use =helm-projectile= to quickly switch to a specific
file that I want to edit. As for the ELPA packages, I mainly use [[http://melpa.org][melpa]] to
install the latest version of the packages.

** Startup
 Other than some global settings, the two important parts of this module are the
 profiler and the settings for the package manager.

 The profiler can measure the loading time for a specific Emacs Lisp module so
 that I can generate tables containing all the loading times in an Org-mode
 buffer. Currently on a SSD machine, Emacs takes less than 1.2s to finish the
 initialization process.

 The package manager settings will keep tracking the packages currently installed
 in the machine and store the installed package list into a file. When starting
 the Emacs, install any packages that are not installed yet. Note this is not an
 on-demand installation feature as provided in [[https://github.com/bbatsov/prelude][Emacs Prelude]]. All the packages
 will be installed no matter whether I have explicitly use them in our settings
 or not. I actually prefer this way because some packages actually need
 zero-configuration(we have =autoload= s!).

** Modules
 I put almost all the code for settings under this directory, and there are *8*
 submodules in it.
 1. =qjp-basic=: I put settings for UI and built-in packages here.
 2. =qjp-defuns=: Some useful function definitions. Since there are different
    categories of such definitions, I split them into three files and put these
    files under =defuns= subdirectory.
 3. =qjp-mode=: A minor mode which is mainly used to define my own key bindings.
    I rarely use =global-set-key= and nearly all my customized keybindings live
    only when the minor mode is on.
 4. =qjp-misc=: This is a very huge part. All the third-party packages installed
    from ELPA which are not for programming purpose, LaTeX or Org-mode should be
    configured here. If there are only a few lines of code of settings for a
    third-party package, then I put the code inside =qjp-misc.el=. However, if
    the number of the lines of code is a little bit large, I prefer putting the
    code into a separate file under =misc= subdirectory.
 5. =qjp-org=: There are actually several files under =org= subdirectory and each
    file has settings for a specific functionality of the Org-mode.
 6. =qjp-tex=: Settings for AUCTeX.
 7. =qjp-programming=: Each programming language has its own config file under
    =programming= subdirectory and the general settings for programming mode are
    in =qjp-programming-basic.el=.
 8. =qjp-alias=: Nothing serious here. Just some short names for some commands
    that have no keybindings. I'm considering merging this into other parts.

** Site-lisp
 This module has packages that are not hosted in any package archieves. These
 packages are usually modified by myself and hosted in my own Git repos. Use
 =git-submodule= to manage them.
